<?php

namespace modules\revalidate;

use Craft;
use yii\base\Module as BaseModule;
use craft\elements\Entry;
use yii\base\Event;
use GuzzleHttp\Client;

/**
 * Revalidate module
 * This was generated by chatgpt, could be garbage code
 *
 * @method static Revalidate getInstance()
 */
class Revalidate extends BaseModule
{
    public function init()
    {
        parent::init();

        // Register the event listener
        Event::on(
            Entry::class,
            Entry::EVENT_AFTER_SAVE,
            function(Event $event) {
                $this->handleAfterSave($event);
            }
        );
    }

    protected function handleAfterSave(Event $event)
    {
        // Check if the event is valid and if the entry is not a draft or revision
        if ($event->sender instanceof Entry && !$event->sender->getIsDraft() && !$event->sender->getIsRevision()) {
            $this->revalidateNextJs($event->sender->uri);
        }
    }

    protected function revalidateNextJs($uri)
    {
        $client = new Client();
        $url = 'https://www.example.drivedev.net/api/revalidate?uri=';

        $url .= urlencode($uri);

        try {
            $response = $client->post($url);
            if ($response->getStatusCode() === 200) {
                Craft::info('Next.js revalidation successful.', __METHOD__);
            } else {
                Craft::error('Next.js revalidation failed: ' . $response->getBody(), __METHOD__);
            }
        } catch (\Exception $e) {
            Craft::error('Next.js revalidation error: ' . $e->getMessage(), __METHOD__);
        }
    }
}
